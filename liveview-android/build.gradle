plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
}

android {
    compileSdk compile_sdk_version

    defaultConfig {
        minSdk min_sdk_version
        targetSdk target_sdk_version

        testInstrumentationRunner instrumentation_runner_class
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility source_compatibility_version
        targetCompatibility target_compatibility_version
    }
    kotlinOptions {
        jvmTarget = jvm_target_version
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion kotlin_compiler_ext_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    namespace 'org.phoenixframework.liveview'
}

dependencies {
    // These dependencies are used internally, and not exposed to consumers on their own compile classpath.
    implementation platform("androidx.compose:compose-bom:$compose_bom_version")
    implementation "androidx.compose.ui:ui"
    implementation "androidx.compose.material:material-icons-core"
    implementation "androidx.compose.material:material-icons-extended"
    implementation "androidx.compose.material3:material3:$material_design_3_version"
    implementation "androidx.compose.ui:ui-text-google-fonts:$google_fonts_version"

    implementation "androidx.activity:activity-compose:$activity_compose_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecyle_version"

    implementation "com.google.code.gson:gson:$gson_version"

    // These dependencies are exported to consumers, that is to say found on their compile classpath.
    api "androidx.core:core-ktx:$core_ktx_version"
    api "androidx.lifecycle:lifecycle-runtime-ktx:$lifecyle_version"
    api "androidx.navigation:navigation-compose:$navigation_compose_version"

    api "com.github.dsrees:JavaPhoenixClient:$java_phoenix_client_version"
    api "com.google.guava:guava:$guava_version"
    //api "com.github.liveview-native:liveview-native-core-jetpack:$liveview_native_core_jetpack_version"
    api files("/Users/nelson.glauber/dockyard/code/liveview-native-core-jetpack/core/build/outputs/aar/core-debug.aar")

    api "org.apache.commons:commons-math3:$commons_math_version"
    api "org.apache.commons:commons-text:$commons_text_version"
    api "org.jetbrains.kotlinx:kotlinx-collections-immutable:$kotlin_immutable_collections_version"
    api "org.jsoup:jsoup:$jsoup_version"

    api "io.coil-kt:coil:$coil_version"
    api "io.coil-kt:coil-compose:$coil_version"
    api "io.coil-kt:coil-svg:$coil_version"

    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_core_version"
    androidTestImplementation "androidx.test.ext:junit:$ext_junit_version"

    testImplementation "junit:junit:$junit_version"


}

// ./gradlew assembleRelease -PcomposeCompilerReports=true
// Run the command above in order to generate the compose stability diagnose report.
// https://developer.android.com/jetpack/compose/performance/stability/diagnose
tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        if (project.findProperty("composeCompilerReports") == "true") {
            freeCompilerArgs += [
                    "-P",
                    "plugin:androidx.compose.compiler.plugins.kotlin:reportsDestination=" +
                            project.buildDir.absolutePath + "/compose_compiler"
            ]
        }
        if (project.findProperty("composeCompilerMetrics") == "true") {
            freeCompilerArgs += [
                    "-P",
                    "plugin:androidx.compose.compiler.plugins.kotlin:metricsDestination=" +
                            project.buildDir.absolutePath + "/compose_compiler"
            ]
        }
    }
}