%{
    "align(Alignment.Bottom)" => [{:align, [], [{:., [], [:Alignment, :Bottom]}]}],
    "align(Alignment.BottomEnd)" => [{:align, [], [{:., [], [:Alignment, :BottomEnd]}]}],
    "align(Alignment.BottomStart)" => [{:align, [], [{:., [], [:Alignment, :BottomStart]}]}],
    "align(Alignment.Center)" => [{:align, [], [{:., [], [:Alignment, :Center]}]}],
    "align(Alignment.CenterHorizontally)" => [{:align, [], [{:., [], [:Alignment, :CenterHorizontally]}]}],
    "align(Alignment.CenterVertically)" => [{:align, [], [{:., [], [:Alignment, :CenterVertically]}]}],
    "align(Alignment.End)" => [{:align, [], [{:., [], [:Alignment, :End]}]}],
    "align(Alignment.Start)" => [{:align, [], [{:., [], [:Alignment, :Start]}]}],
    "align(Alignment.Top)" => [{:align, [], [{:., [], [:Alignment, :Top]}]}],
    "align(Alignment.TopEnd)" => [{:align, [], [{:., [], [:Alignment, :TopEnd]}]}],
    "align(Alignment.TopStart)" => [{:align, [], [{:., [], [:Alignment, :TopStart]}]}],
    "aspectRatio(1.33)" => [{:aspectRatio, [], [1.33]}],
    "aspectRatio(1.77)" => [{:aspectRatio, [], [1.77]}],
    "background(Color.Red)" => [{:background, [], [{:., [], [:Color, :Red]}]}],
    "background(Color.Green)" => [{:background, [], [{:., [], [:Color, :Green]}]}],
    "background(Color.Blue)" => [{:background, [], [{:., [], [:Color, :Blue]}]}],
    "background(Color.Black)" => [{:background, [], [{:., [], [:Color, :Black]}]}],
    "background(Color.White)" => [{:background, [], [{:., [], [:Color, :White]}]}],
    "background(Color.Gray)" => [{:background, [], [{:., [], [:Color, :Gray]}]}],
    "background(Color.LightGray)" => [{:background, [], [{:., [], [:Color, :LightGray]}]}],
    "background(Color.DarkGray)" => [{:background, [], [{:., [], [:Color, :DarkGray]}]}],
    "background(Color.Yellow)" => [{:background, [], [{:., [], [:Color, :Yellow]}]}],
    "background(Color.Magenta)" => [{:background, [], [{:., [], [:Color, :Magenta]}]}],
    "background(Color.Cyan)" => [{:background, [], [{:., [], [:Color, :Cyan]}]}],
    "background(Color.Unspecified)" => [{:background, [], [{:., [], [:Color, :Unspecified]}]}],
    "background(Color.primary)" => [{:background, [], [{:., [], [:Color, :primary]}]}],
    "background(Color.onPrimary)" => [{:background, [], [{:., [], [:Color, :onPrimary]}]}],
    "background(Color.primaryContainer)" => [{:background, [], [{:., [], [:Color, :primaryContainer]}]}],
    "background(Color.onPrimaryContainer)" => [{:background, [], [{:., [], [:Color, :onPrimaryContainer]}]}],
    "background(Color.inversePrimary)" => [{:background, [], [{:., [], [:Color, :inversePrimary]}]}],
    "background(Color.secondary)" => [{:background, [], [{:., [], [:Color, :secondary]}]}],
    "background(Color.onSecondary)" => [{:background, [], [{:., [], [:Color, :onSecondary]}]}],
    "background(Color.secondaryContainer)" => [{:background, [], [{:., [], [:Color, :secondaryContainer]}]}],
    "background(Color.onSecondaryContainer)" => [{:background, [], [{:., [], [:Color, :onSecondaryContainer]}]}],
    "background(Color.tertiary)" => [{:background, [], [{:., [], [:Color, :tertiary]}]}],
    "background(Color.onTertiary)" => [{:background, [], [{:., [], [:Color, :onTertiary]}]}],
    "background(Color.tertiaryContainer)" => [{:background, [], [{:., [], [:Color, :tertiaryContainer]}]}],
    "background(Color.onTertiaryContainer)" => [{:background, [], [{:., [], [:Color, :onTertiaryContainer]}]}],
    "background(Color.background)" => [{:background, [], [{:., [], [:Color, :background]}]}],
    "background(Color.onBackground)" => [{:background, [], [{:., [], [:Color, :onBackground]}]}],
    "background(Color.surface)" => [{:background, [], [{:., [], [:Color, :surface]}]}],
    "background(Color.onSurface)" => [{:background, [], [{:., [], [:Color, :onSurface]}]}],
    "background(Color.surfaceVariant)" => [{:background, [], [{:., [], [:Color, :surfaceVariant]}]}],
    "background(Color.onSurfaceVariant)" => [{:background, [], [{:., [], [:Color, :onSurfaceVariant]}]}],
    "background(Color.surfaceTint)" => [{:background, [], [{:., [], [:Color, :surfaceTint]}]}],
    "background(Color.inverseSurface)" => [{:background, [], [{:., [], [:Color, :inverseSurface]}]}],
    "background(Color.inverseOnSurface)" => [{:background, [], [{:., [], [:Color, :inverseOnSurface]}]}],
    "background(Color.error)" => [{:background, [], [{:., [], [:Color, :error]}]}],
    "background(Color.onError)" => [{:background, [], [{:., [], [:Color, :onError]}]}],
    "background(Color.errorContainer)" => [{:background, [], [{:., [], [:Color, :errorContainer]}]}],
    "background(Color.onErrorContainer)" => [{:background, [], [{:., [], [:Color, :onErrorContainer]}]}],
    "background(Color.outline)" => [{:background, [], [{:., [], [:Color, :outline]}]}],
    "background(Color.outlineVariant)" => [{:background, [], [{:., [], [:Color, :outlineVariant]}]}],
    "background(Color.scrim)" => [{:background, [], [{:., [], [:Color, :scrim]}]}],
    "background(Color.surfaceBright)" => [{:background, [], [{:., [], [:Color, :surfaceBright]}]}],
    "background(Color.surfaceContainer)" => [{:background, [], [{:., [], [:Color, :surfaceContainer]}]}],
    "background(Color.surfaceContainerHigh)" => [{:background, [], [{:., [], [:Color, :surfaceContainerHigh]}]}],
    "background(Color.surfaceContainerHighest)" => [{:background, [], [{:., [], [:Color, :surfaceContainerHighest]}]}],
    "background(Color.surfaceContainerLow)" => [{:background, [], [{:., [], [:Color, :surfaceContainerLow]}]}],
    "background(Color.surfaceContainerLowest)" => [{:background, [], [{:., [], [:Color, :surfaceContainerLowest]}]}],
    "background(Color.surfaceDim)" => [{:background, [], [{:., [], [:Color, :surfaceDim]}]}],
    "clip(RoundedCornerShape(Dp(4)))" => [{:clip, [], [{:RoundedCornerShape, [], [{:Dp, [], [4]}]}]}],
    "clip(CircleShape)" => [{:clip, [], [:CircleShape]}],
    "fillMaxSize()" => [{:fillMaxSize, [], []}],
    "fillMaxWidth()" => [{:fillMaxWidth, [], []}],
    "fillMaxWidth(0.10)" => [{:fillMaxWidth, [], [0.10]}],
    "fillMaxWidth(0.15)" => [{:fillMaxWidth, [], [0.15]}],
    "fillMaxWidth(0.25)" => [{:fillMaxWidth, [], [0.25]}],
    "fillMaxWidth(0.35)" => [{:fillMaxWidth, [], [0.35]}],
    "fillMaxHeight()" => [{:fillMaxHeight, [], []}],
    "fillMaxHeight(0.10)" => [{:fillMaxHeight, [], [0.10]}],
    "fillMaxHeight(0.20)" => [{:fillMaxHeight, [], [0.20]}],
    "fillMaxHeight(0.40)" => [{:fillMaxHeight, [], [0.40]}],
    "fillMaxHeight(0.50)" => [{:fillMaxHeight, [], [0.50]}],
    "fillMaxHeight(0.70)" => [{:fillMaxHeight, [], [0.70]}],
    "fillMaxHeight(0.50)" => [{:fillMaxHeight, [], [0.50]}],
    "height(IntrinsicSize.Min)" => [{:height, [], [{:., [], [:IntrinsicSize, :Min]}]}],
    "height(Dp(4))" => [{:height, [], [{:Dp, [], [4]}]}],
    "height(Dp(10))" => [{:height, [], [{:Dp, [], [10]}]}],
    "height(Dp(100))" => [{:height, [], [{:Dp, [], [100]}]}],
    "height(Dp(150))" => [{:height, [], [{:Dp, [], [150]}]}],
    "height(Dp(200))" => [{:height, [], [{:Dp, [], [200]}]}],
    "height(Dp(400))" => [{:height, [], [{:Dp, [], [400]}]}],
    "matchParentSize()" => [{:matchParentSize, [], []}],
    "padding(Dp(8))" => [{:padding, [], [{:Dp, [], [8]}]}],
    "padding(Dp(16))" => [{:padding, [], [{:Dp, [], [16]}]}],
    "padding(Dp(32))" => [{:padding, [], [{:Dp, [], [32]}]}],
    "padding(Dp(48))" => [{:padding, [], [{:Dp, [], [48]}]}],
    "padding(horizontal = Dp(24))" => [{:padding, [], [[horizontal: {:Dp, [], [24]}]]}],
    "padding(start = Dp(16), end = Dp(16))" => [{:padding, [], [[start: {:Dp, [], [16]}, end: {:Dp, [], [16]}]]}],
    "padding(top = Dp(8))" => [{:padding, [], [[top: {:Dp, [], [8]}]]}],
    "padding(bottom = Dp(24))" => [{:padding, [], [[bottom: {:Dp, [], [24]}]]}],
    "padding(vertical = Dp(16))" => [{:padding, [], [[vertical: {:Dp, [], [16]}]]}],
    "size(Dp(40))" => [{:size, [], [{:Dp, [], [40]}]}],
    "size(Dp(50))" => [{:size, [], [{:Dp, [], [50]}]}],
    "size(Dp(80))" => [{:size, [], [{:Dp, [], [80]}]}],
    "size(Dp(100))" => [{:size, [], [{:Dp, [], [100]}]}],
    "size(Dp(200))" => [{:size, [], [{:Dp, [], [200]}]}],
    "testTag('customAlert')" => [{:testTag, [], ["customAlert"]}],
    "testTag('basicDialog')" => [{:testTag, [], ["basicDialog"]}],
    "testTag('myAlert')" => [{:testTag, [], ["myAlert"]}],
    "testTag('sheet')" => [{:testTag, [], ["sheet"]}],
    "weight(1)" => [{:weight, [], [1]}],
    "weight(25)" => [{:weight, [], [25]}],
    "weight(35)" => [{:weight, [], [35]}],
    "weight(40)" => [{:weight, [], [40]}],
    "width(Dp(100))" => [{:width, [], [{:Dp, [], [100]}]}],
    "width(Dp(150))" => [{:width, [], [{:Dp, [], [150]}]}],
    "width(Dp(200))" => [{:width, [], [{:Dp, [], [200]}]}],
}